// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf/cf-redis-broker/instance/id"
)

type FakeInstanceIDLocator struct {
	LocateIDStub        func(redisConfigPath, nodeIP string) (string, error)
	locateIDMutex       sync.RWMutex
	locateIDArgsForCall []struct {
		redisConfigPath string
		nodeIP          string
	}
	locateIDReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeInstanceIDLocator) LocateID(redisConfigPath string, nodeIP string) (string, error) {
	fake.locateIDMutex.Lock()
	fake.locateIDArgsForCall = append(fake.locateIDArgsForCall, struct {
		redisConfigPath string
		nodeIP          string
	}{redisConfigPath, nodeIP})
	fake.locateIDMutex.Unlock()
	if fake.LocateIDStub != nil {
		return fake.LocateIDStub(redisConfigPath, nodeIP)
	} else {
		return fake.locateIDReturns.result1, fake.locateIDReturns.result2
	}
}

func (fake *FakeInstanceIDLocator) LocateIDCallCount() int {
	fake.locateIDMutex.RLock()
	defer fake.locateIDMutex.RUnlock()
	return len(fake.locateIDArgsForCall)
}

func (fake *FakeInstanceIDLocator) LocateIDArgsForCall(i int) (string, string) {
	fake.locateIDMutex.RLock()
	defer fake.locateIDMutex.RUnlock()
	return fake.locateIDArgsForCall[i].redisConfigPath, fake.locateIDArgsForCall[i].nodeIP
}

func (fake *FakeInstanceIDLocator) LocateIDReturns(result1 string, result2 error) {
	fake.LocateIDStub = nil
	fake.locateIDReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ id.InstanceIDLocator = new(FakeInstanceIDLocator)
