// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf/cf-redis-broker/instance"
)

type FakeRedisConfigFinder struct {
	FindStub        func() ([]instance.RedisConfig, error)
	findMutex       sync.RWMutex
	findArgsForCall []struct{}
	findReturns     struct {
		result1 []instance.RedisConfig
		result2 error
	}
}

func (fake *FakeRedisConfigFinder) Find() ([]instance.RedisConfig, error) {
	fake.findMutex.Lock()
	fake.findArgsForCall = append(fake.findArgsForCall, struct{}{})
	fake.findMutex.Unlock()
	if fake.FindStub != nil {
		return fake.FindStub()
	} else {
		return fake.findReturns.result1, fake.findReturns.result2
	}
}

func (fake *FakeRedisConfigFinder) FindCallCount() int {
	fake.findMutex.RLock()
	defer fake.findMutex.RUnlock()
	return len(fake.findArgsForCall)
}

func (fake *FakeRedisConfigFinder) FindReturns(result1 []instance.RedisConfig, result2 error) {
	fake.FindStub = nil
	fake.findReturns = struct {
		result1 []instance.RedisConfig
		result2 error
	}{result1, result2}
}

var _ instance.RedisConfigFinder = new(FakeRedisConfigFinder)
